// Generated by CoffeeScript 1.10.0
(function() {
  var Endpoint;

  Endpoint = (function() {
    function Endpoint(version, requiredAuth, requiredParams, docs1, callback) {
      this.version = version;
      this.requiredAuth = requiredAuth;
      this.requiredParams = requiredParams;
      this.docs = docs1;
      this.callback = callback;
      this.route = null;
      this.deprecated = false;
      this.params = {};
    }

    Endpoint.prototype.getEndpoint = function() {
      if (this.version === null) {
        return this.route.route;
      }
      return "/" + this.version + this.route.route;
    };

    Endpoint.prototype.isDeprecated = function() {
      if (!this.route) {
        return false;
      }
      return this.deprecated || this.route.getMaxVersion() !== this.version;
    };

    Endpoint.prototype.deprecate = function() {
      this.deprecated = true;
      return this;
    };

    Endpoint.prototype.auth = function() {
      this.requiredAuth = true;
      return this;
    };

    Endpoint.prototype.addParams = function(params) {
      var i, len, param, results;
      results = [];
      for (i = 0, len = params.length; i < len; i++) {
        param = params[i];
        results.push(this.addParam(param));
      }
      return results;
    };

    Endpoint.prototype.addParam = function(param) {
      this.params[param.key] = {
        required: param.required,
        type: param.type,
        description: param.description
      };
      if (param.required) {
        this.requiredParams.push(param.key);
      }
      return this;
    };

    Endpoint.prototype.setDocs = function(docs) {
      this.docs = docs;
      return this;
    };

    return Endpoint;

  })();

  Endpoint.Param = (function() {
    function Param(key, required, type, description) {
      this.key = key;
      this.required = required != null ? required : false;
      this.type = type != null ? type : null;
      this.description = description != null ? description : null;
    }

    return Param;

  })();

  module.exports = Endpoint;

}).call(this);
